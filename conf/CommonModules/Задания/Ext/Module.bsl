Процедура Сервер1(ИмяФайла, КонечныеТочки) Экспорт
	
	Если Не ПодключитьВнешнююКомпоненту(ИмяФайла, "MedIgor", ТипВнешнейКомпоненты.Native, 
		ТипПодключенияВнешнейКомпоненты.НеИзолированно) Тогда
		ВызватьИсключение "Не удалось подключить внешнюю компоненту";
	КонецЕсли;
	
	Socket = Новый ("Addin.MedIgor.ZeroMQ.Rep");
	
	Для Каждого КонечнаяТочка Из КонечныеТочки Цикл
		Socket.Bind(КонечнаяТочка);
	КонецЦикла;
	
	Пока Истина Цикл
		ДвоичныеДанные = Socket.Recv();
		Если ДвоичныеДанные = Неопределено Тогда
			Прервать;
		КонецЕсли;
		Строка = ПолучитьСтрокуИзДвоичныхДанных(ДвоичныеДанные);
		Socket.Send(ПолучитьДвоичныеДанныеИзСтроки("Получено: " + Строка));
		Если Строка = "Стоп" Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура Publisher1(ИмяФайла, КонечнаяТочка, Сообщение) Экспорт
	
	Если Не ПодключитьВнешнююКомпоненту(ИмяФайла, "MedIgor", ТипВнешнейКомпоненты.Native, 
		ТипПодключенияВнешнейКомпоненты.НеИзолированно) Тогда
		ВызватьИсключение "Не удалось подключить внешнюю компоненту";
	КонецЕсли;
	
	Publisher = Новый ("Addin.MedIgor.ZeroMQ.Pub");
	Publisher.Connect(КонечнаяТочка);
	
	// Нужно время чтобы подключился Подписчик, иначе сообщение теряется
	ПолучитьТекущийСеансИнформационнойБазы().ПолучитьФоновоеЗадание().ОжидатьЗавершенияВыполнения(1);
	
	Publisher.Send(Сообщение);
	
КонецПроцедуры 

Процедура ЗадачаКонвейера(ИмяФайла, ОткудаВзять, КудаОтправить) Экспорт
	
	Если Не ПодключитьВнешнююКомпоненту(ИмяФайла, "MedIgor", ТипВнешнейКомпоненты.Native, 
		ТипПодключенияВнешнейКомпоненты.НеИзолированно) Тогда
		ВызватьИсключение "Не удалось подключить внешнюю компоненту";
	КонецЕсли;
	
	Pull = Новый ("Addin.MedIgor.ZeroMQ.Pull");
	Pull.Connect(ОткудаВзять);
	Pull.SetRecvTimeout(5000);
	
	Push = Новый ("Addin.MedIgor.ZeroMQ.Push");
	Push.Bind(КудаОтправить);
	Push.SetSendTimeout(5000);
	
	ОбработаноЗадач = 0;
	
	Пока Истина Цикл
		Задача = Pull.Recv();
		Если Задача = Неопределено Тогда
			// Задачи кончились;
			Прервать;
		КонецЕсли;
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ПолучитьСтрокуИзДвоичныхДанных(Задача));
		Данные = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		
		ВыполнитьЗадачу(Данные);
		
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		ЗаписатьJSON(ЗаписьJSON, Данные);
		Текст = ЗаписьJSON.Закрыть();
		
		Если Не Push.Send(ПолучитьДвоичныеДанныеИзСтроки(Текст)) Тогда
			ВызватьИсключение "Не удалось отправить задачу";
		КонецЕсли;
		
		ОбработаноЗадач = ОбработаноЗадач + 1;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("ЗадачаКонвейера", , , , СтрШаблон("ОбработаноЗадач: %1", ОбработаноЗадач));
	
КонецПроцедуры

Процедура ВыполнитьЗадачу(Данные)
	
	// Для простоты каждая задача будет заключаться в увеличении числа
	Данные.Задача = Данные.Задача + 1;
	
КонецПроцедуры
