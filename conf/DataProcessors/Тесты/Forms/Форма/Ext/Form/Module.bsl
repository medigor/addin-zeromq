
&НаКлиенте
Процедура ТестReqRep(Команда)
	ТестReqRepНаСервере(ИмяФайла);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТестReqRepНаСервере(ИмяФайла)
	
	ВременныйКаталог = ПолучитьИмяВременногоФайла("zeromq") + ПолучитьРазделительПути();
	СоздатьКаталог(ВременныйКаталог);
	
	КонечныеТочки = Новый Массив;
	КонечныеТочки.Добавить("inproc://#1");
	КонечныеТочки.Добавить("ipc://" + ВременныйКаталог + "1");
	КонечныеТочки.Добавить("tcp://127.0.0.1:5556");
	
	ПараметрыЗадания = Новый Массив;
	ПараметрыЗадания.Добавить(ИмяФайла);
	ПараметрыЗадания.Добавить(КонечныеТочки);
	
	Задание = ФоновыеЗадания.Выполнить("Задания.Сервер1", ПараметрыЗадания);
	
	Если Не ПодключитьВнешнююКомпоненту(ИмяФайла, "MedIgor", ТипВнешнейКомпоненты.Native, 
		ТипПодключенияВнешнейКомпоненты.НеИзолированно) Тогда
		ВызватьИсключение "Не удалось подключить внешнюю компоненту";
	КонецЕсли;
	
	Socket = Новый ("Addin.MedIgor.ZeroMQ.Req");
	Socket.SetRecvTimeout(1000);
	
	Для Каждого КонечнаяТочка Из КонечныеТочки Цикл
		ПроверитьКонечнуюТочку(Socket, КонечнаяТочка);
	КонецЦикла;
	
	Для Каждого КонечнаяТочка Из КонечныеТочки Цикл
		ТестБыстродействия(Socket, КонечнаяТочка);
	КонецЦикла;
	
	Socket.Connect(КонечныеТочки[0]);
	Socket.Send(ПолучитьДвоичныеДанныеИзСтроки("Стоп"));
	Ответ = Socket.Recv();
	
	Задание = Задание.ОжидатьЗавершенияВыполнения(1);
	Если Задание.Состояние <> СостояниеФоновогоЗадания.Завершено Тогда
		ВызватьИсключение СтрШаблон("Задание %1", Задание.Состояние);
	КонецЕсли;
	
	УдалитьФайлы(ВременныйКаталог);
	
	Сообщить("Тест выполнен успешно!");
	
КонецПроцедуры


&НаКлиенте
Процедура ТестReqRepMultipart(Команда)
	ТестReqRepMultipartНаСервере(ИмяФайла);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТестReqRepMultipartНаСервере(ИмяФайла)
	
	Если Не ПодключитьВнешнююКомпоненту(ИмяФайла, "MedIgor", ТипВнешнейКомпоненты.Native, 
		ТипПодключенияВнешнейКомпоненты.НеИзолированно) Тогда
		ВызватьИсключение "Не удалось подключить внешнюю компоненту";
	КонецЕсли;
	
	КонечнаяТочка = "inproc://#2";
	
	Server = Новый ("Addin.MedIgor.ZeroMQ.Rep");
	Server.Bind(КонечнаяТочка);
	Server.SetRecvTimeout(1000);
	
	Client = Новый ("Addin.MedIgor.ZeroMQ.Req");
	Client.Connect(КонечнаяТочка);
	Client.SetRecvTimeout(1000);
	
	
	Client.SendPart(ПолучитьДвоичныеДанныеИзСтроки("Часть1"));
	Client.SendPart(ПолучитьДвоичныеДанныеИзСтроки("Часть2"));
	Client.Send(ПолучитьДвоичныеДанныеИзСтроки("Часть3"));
	
	Части = Server.RecvMultipart();
	Если Части <> 3 Тогда
		ВызватьИсключение "Получено неверное количество частей запроса";
	КонецЕсли;
	
	Часть1 = ПолучитьСтрокуИзДвоичныхДанных(Server.GetPart(0));
	Часть2 = ПолучитьСтрокуИзДвоичныхДанных(Server.GetPart(1));
	Часть3 = ПолучитьСтрокуИзДвоичныхДанных(Server.GetPart(2));
	
	Если Часть1 <> "Часть1" Или Часть1 <> "Часть1" Или Часть1 <> "Часть1" Тогда
		ВызватьИсключение "Получен неверный запросы";
	КонецЕсли;
	
	Server.Send(ПолучитьДвоичныеДанныеИзСтроки("Ок"));
	
	Ответ = Client.RecvMultipart();
	Если Ответ <> 1 Или ПолучитьСтрокуИзДвоичныхДанных(Client.GetPart(0)) <> "Ок" Тогда
		ВызватьИсключение "Получен неверный ответ";
	КонецЕсли;
	
	Сообщить("Тест выполнен успешно!");
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ПроверитьКонечнуюТочку(Socket, КонечнаяТочка)
	
	Socket.Connect(КонечнаяТочка);
	
	Попытка
		Socket.Send(ПолучитьДвоичныеДанныеИзСтроки("123"));
	Исключение
		ВызватьИсключение Socket.LastError;
	КонецПопытки;
	
	Попытка
		Ответ = Socket.Recv();
	Исключение
		ВызватьИсключение Socket.LastError;
	КонецПопытки;
	ПроверитьОтвет(Ответ);
	
	Socket.Disconnect(КонечнаяТочка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТестБыстродействия(Socket, КонечнаяТочка)
	
	Socket.Connect(КонечнаяТочка);
	Socket.Send(ПолучитьДвоичныеДанныеИзСтроки("123"));
	Ответ = Socket.Recv();
	
	Количество = 10 * 1000;
	
	Начало = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Для К = 1 По Количество Цикл
		Socket.Send(ПолучитьДвоичныеДанныеИзСтроки("123"));
		Ответ = Socket.Recv();
	КонецЦикла;
	Конец = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	Socket.Disconnect(КонечнаяТочка);
	Сообщить(СтрШаблон("Конечная точка: ""%1"", длительность: %2 мс, кол-во запросов: %3", КонечнаяТочка, Конец - Начало, Количество));
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверитьОтвет(Ответ)
	
	Если Ответ = Неопределено Тогда
		ВызватьИсключение "Не удалось получить ответ";
	ИначеЕсли ПолучитьСтрокуИзДвоичныхДанных(Ответ) <> "Получено: 123" Тогда
		ВызватьИсключение "Получить неверный ответ";
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ТестPubSub(Команда)
	ТестPubSubНаСервере(ИмяФайла);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТестPubSubНаСервере(ИмяФайла)
	
	Если Не ПодключитьВнешнююКомпоненту(ИмяФайла, "MedIgor", ТипВнешнейКомпоненты.Native, 
		ТипПодключенияВнешнейКомпоненты.НеИзолированно) Тогда
		ВызватьИсключение "Не удалось подключить внешнюю компоненту";
	КонецЕсли;
	
	КонечнаяТочка = "inproc://topiс1";
	Тема = ПолучитьДвоичныеДанныеИзСтроки("topiс1");
	
	Publisher = Новый ("Addin.MedIgor.ZeroMQ.Pub");
	Publisher.Bind(КонечнаяТочка);
	
	Subscriber = Новый ("Addin.MedIgor.ZeroMQ.Sub");
	Subscriber.Connect(КонечнаяТочка);
	Subscriber.Subscribe(Тема);
	Subscriber.SetRecvTimeout(1000);
	
	Publisher.SendPart(ПолучитьДвоичныеДанныеИзСтроки("ТемаНаКоторуюНиктоНеПодписан"));
	Publisher.Send(ПолучитьДвоичныеДанныеИзСтроки("ТелоКотороеНиктоНеПолучит"));
	
	Для Номер = 1 По 3 Цикл
		Publisher.SendPart(Тема);
		Publisher.Send(ПолучитьДвоичныеДанныеИзСтроки(СтрШаблон("Сообщение%1", XMLСтрока(Номер)), КодировкаТекста.UTF16));
	КонецЦикла;
	
	Для Номер = 1 По 3 Цикл
		Ответ = Subscriber.RecvMultipart();
		Если Ответ <> 2 Тогда
			ВызватьИсключение "Получено неверное сообщение";
		КонецЕсли;
		ПолученнаяТема = ПолучитьСтрокуИзДвоичныхДанных(Subscriber.GetPart(0));
		Если ПолученнаяТема <> "topiс1" Тогда
			ВызватьИсключение "Получена неверная тема";
		КонецЕсли;
		ПолученноеСообщение = ПолучитьСтрокуИзДвоичныхДанных(Subscriber.GetPart(1), КодировкаТекста.UTF16);
		Если ПолученноеСообщение <> СтрШаблон("Сообщение%1", XMLСтрока(Номер)) Тогда
			ВызватьИсключение "Получено неверное сообщение";
		КонецЕсли;
	КонецЦикла;
	
	Subscriber = Неопределено;
	Publisher = Неопределено;
	
	
	// Наоборот тоже можно, чтобы Publisher подключался к Subscriber
	Subscriber = Новый ("Addin.MedIgor.ZeroMQ.Sub");
	Subscriber.Bind(КонечнаяТочка);
	Subscriber.Subscribe(ПолучитьДвоичныеДанныеИзСтроки("")); // Подписка на любую тему
	Subscriber.SetRecvTimeout(2000); // в фоновом задании 1 сек, поэтому тут 2
	
	ПараметрыЗадания = Новый Массив;
	ПараметрыЗадания.Добавить(ИмяФайла);
	ПараметрыЗадания.Добавить(КонечнаяТочка);
	ПараметрыЗадания.Добавить(ПолучитьДвоичныеДанныеИзСтроки("Привет!"));
	ФоновыеЗадания.Выполнить("Задания.Publisher1", ПараметрыЗадания);
	
	Ответ = Subscriber.Recv();
	Если Ответ = Неопределено Или ПолучитьСтрокуИзДвоичныхДанных(Ответ) <> "Привет!" Тогда
		ВызватьИсключение "Получено неверное сообщение";
	КонецЕсли;
	
	Сообщить("Тест выполнен успешно!");
	
КонецПроцедуры


&НаКлиенте
Процедура ТестPushPull(Команда)
	ТестPushPullНаСервере(ИмяФайла);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТестPushPullНаСервере(ИмяФайла)
	
	Если Не ПодключитьВнешнююКомпоненту(ИмяФайла, "MedIgor", ТипВнешнейКомпоненты.Native, 
		ТипПодключенияВнешнейКомпоненты.НеИзолированно) Тогда
		ВызватьИсключение "Не удалось подключить внешнюю компоненту";
	КонецЕсли;
	
	КонечнаяТочка = "inproc://topiс1";
	
	// Pull могут подключаться к Push 
	Push = Новый ("Addin.MedIgor.ZeroMQ.Push");
	Push.Bind(КонечнаяТочка);
	
	Pull = Новый ("Addin.MedIgor.ZeroMQ.Pull");
	Pull.Connect(КонечнаяТочка);
	Pull.SetRecvTimeout(1000);
	
	Для НомерЗадачи = 1 По 3 Цикл
		Push.Send(ПолучитьДвоичныеДанныеИзСтроки(СтрШаблон("Задача%1", XMLСтрока(НомерЗадачи))));
	КонецЦикла;
	
	Для НомерЗадачи = 1 По 3 Цикл
		Задача = Pull.Recv();
		Если Задача = Неопределено 
			Или ПолучитьСтрокуИзДвоичныхДанных(Задача) <> СтрШаблон("Задача%1", XMLСтрока(НомерЗадачи)) Тогда 
			ВызватьИсключение "Получена неверная задача";
		КонецЕсли;
	КонецЦикла;
	
	
	Push = Неопределено;
	Pull = Неопределено;
	
	// И Наоборот: Push могут подключаться к Pull
	Pull = Новый ("Addin.MedIgor.ZeroMQ.Pull");
	Pull.SetRecvTimeout(1000);
	Pull.Bind(КонечнаяТочка);
	
	Push = Новый ("Addin.MedIgor.ZeroMQ.Push");
	Push.Connect(КонечнаяТочка);
	
	Push.Send(ПолучитьДвоичныеДанныеИзСтроки("Задача"));
	
	Задача = Pull.Recv();
	Если Задача = Неопределено Или ПолучитьСтрокуИзДвоичныхДанных(Задача) <> "Задача" Тогда 
		ВызватьИсключение "Получена неверная задача";
	КонецЕсли;
	
	Сообщить("Тест выполнен успешно!");
	
КонецПроцедуры


&НаКлиенте
Процедура ТестPipeline(Команда)
	ТестPipelineНаСервере(ИмяФайла);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТестPipelineНаСервере(ИмяФайла)
	
	Начало = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	Если Не ПодключитьВнешнююКомпоненту(ИмяФайла, "MedIgor", ТипВнешнейКомпоненты.Native, 
		ТипПодключенияВнешнейКомпоненты.НеИзолированно) Тогда
		ВызватьИсключение "Не удалось подключить внешнюю компоненту";
	КонецЕсли;
	
	ВременныйКаталог = ПолучитьИмяВременногоФайла("zmq") + ПолучитьРазделительПути();
	СоздатьКаталог(ВременныйКаталог);
	
	ЭтоФайловаяБаза = СтрНайти(СтрокаСоединенияИнформационнойБазы(), "File=") > 0;
	ОбработчиковКонвейера = ?(ЭтоФайловаяБаза, 1, 10);
	КоличествоЗадач = 1000 * 1000;
	
	Push = Новый ("Addin.MedIgor.ZeroMQ.Push");
	Push.Bind("ipc://" + ВременныйКаталог + "1");
	
	Для НомерОбработчика = 1 По ОбработчиковКонвейера Цикл
		
		ОткудаВзять = "ipc://" + ВременныйКаталог + XMLСтрока(НомерОбработчика);
		КудаОтправить = "ipc://" + ВременныйКаталог + XMLСтрока(НомерОбработчика + 1);
		ПараметрыЗадания = Новый Массив;
		ПараметрыЗадания.Добавить(ИмяФайла);
		ПараметрыЗадания.Добавить(ОткудаВзять);
		ПараметрыЗадания.Добавить(КудаОтправить);      
		НаименованиеЗадания = СтрШаблон("ЗадачаКонвейера %1", НомерОбработчика);
		ФоновыеЗадания.Выполнить("Задания.ЗадачаКонвейера", ПараметрыЗадания, НаименованиеЗадания, НаименованиеЗадания);
		
	КонецЦикла;
	
	Pull = Новый ("Addin.MedIgor.ZeroMQ.Pull");
	Pull.Connect("ipc://" + ВременныйКаталог + XMLСтрока(ОбработчиковКонвейера + 1));
	
	ПолученоОтветов = 0;
	
	Для НомерЗадачи = 1 По КоличествоЗадач Цикл
		
		Задача = Новый Структура("НомерЗадачи, Задача", НомерЗадачи, 1);
		
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		ЗаписатьJSON(ЗаписьJSON, Задача);
		Текст = ЗаписьJSON.Закрыть();
		
		Если Не Push.Send(ПолучитьДвоичныеДанныеИзСтроки(Текст)) Тогда
			ВызватьИсключение "Задача не отправлена";
		КонецЕсли;
		
		// Разобрать очередь без ожидания
		Pull.SetRecvTimeout(0);
		Пока Истина Цикл
			Если Не ПроверитьЗадачу(Pull, ОбработчиковКонвейера, ПолученоОтветов) Тогда
				// Нет задач в очереди
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	// Получить оставшиеся задачи
	Pull.SetRecvTimeout(1000);
	Для К = ПолученоОтветов + 1 По КоличествоЗадач Цикл
		Если Не ПроверитьЗадачу(Pull, ОбработчиковКонвейера, ПолученоОтветов) Тогда
			// Таймаут
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Конец = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Сообщить(СтрШаблон("Длительность: %1 сек", (Конец - Начало) / 1000));
	
	Если ПолученоОтветов = КоличествоЗадач Тогда
		Сообщить("Все задачи выполнены успешно");
	Иначе
		Сообщить(СтрШаблон("ПолученоОтветов: %1", ПолученоОтветов));
	КонецЕсли;
	
	УдалитьФайлы(ВременныйКаталог);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьЗадачу(Pull, ОбработчиковКонвейера, ПолученоОтветов)
	
	ГотоваяЗадача = Pull.Recv();
	Если ГотоваяЗадача = Неопределено Тогда
		// Задачи нет
		Возврат Ложь;
	КонецЕсли;
	
	// Проверка
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ПолучитьСтрокуИзДвоичныхДанных(ГотоваяЗадача));
	Данные = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	Если Данные.Задача - ОбработчиковКонвейера <> 1 Тогда
		ВызватьИсключение "Задача не выполнена";
	КонецЕсли;
	
	ПолученоОтветов = ПолученоОтветов + 1;
	
	Возврат Истина;
	
КонецФункции


&НаКлиенте
Процедура ТестInfo(Команда)
	ТестInfoНаСервере(ИмяФайла);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТестInfoНаСервере(ИмяФайла)
	
	Если Не ПодключитьВнешнююКомпоненту(ИмяФайла, "MedIgor", ТипВнешнейКомпоненты.Native, 
		ТипПодключенияВнешнейКомпоненты.НеИзолированно) Тогда
		ВызватьИсключение "Не удалось подключить внешнюю компоненту";
	КонецЕсли;
	
	Info = Новый ("Addin.MedIgor.ZeroMQ.Info");
	Попытка
		Instance = Новый УникальныйИдентификатор(Info.Instance);
	Исключение
		ВызватьИсключение "Не удалось получить свойство Info.Instance";
	КонецПопытки;
	
	Попытка
		Проверка = Новый УникальныйИдентификатор(Info.Instance);
	Исключение
		ВызватьИсключение "Не удалось получить свойство Info.Instance";
	КонецПопытки;
	
	Попытка
		Проверка = Info.VersionZeroMQ;
	Исключение
		ВызватьИсключение "Не удалось получить свойство Info.VersionZeroMQ";
	КонецПопытки;
	
	Попытка
		ВерсияКомпоненты = Info.VersionAddin;
	Исключение
		ВызватьИсключение "Не удалось получить свойство Info.VersionAddin";
	КонецПопытки;
	
	Сообщить(СтрШаблон("Тест выполнен успешно! версия компоненты: %1", ВерсияКомпоненты));
	
КонецПроцедуры
